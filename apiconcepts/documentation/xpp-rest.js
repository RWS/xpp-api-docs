window.xppREST = {"openapi":"3.1.0","info":{"title":"XPP RESTful Web Services","version":"1.6.0","license":"DO NOT USE THE ENCLOSED SOFTWARE UNTIL YOU READ THIS DOCUMENT CAREFULLY.\nTHIS IS A LEGAL AGREEMENT BETWEEN YOU AND XYENTERPRISE INC. (\"XYENTERPRISE\") BY TYPING IN YOUR SOFTWARE ENCRYPTION CODE OR OTHERWISE LOADING, ACTIVATING OR USING THE SOFTWARE AND DOCUMENTATION (\"SOFTWARE\") PROVIDED TO YOU BY XYENTERPRISE OR ITS AUTHORIZED AGENT IN RESPONSE TO AN ORDER (AS DEFINED IN THIS PARAGRAPH), YOU ACKNOWLEDGE THAT YOU HAVE READ, UNDERSTAND AND AGREE TO BE BOUND BY THE TERMS AND CONDITIONS OF THIS AGREEMENT, INCLUDING THE SOFTWARE LICENSE AND DISCLAIMER OF THE SOFTWARE WARRANTY CONTAINED IN THIS AGREEMENT.  THIS AGREEMENT REPRESENTS THE ENTIRE AND SOLE AGREEMENT CONCERNING THE XYENTERPRISE SOFTWARE, AND IT SUPERSEDES ANY PRIOR PROPOSAL, REPRESENTATION OR UNDERSTANDING REGARDING THE SOFTWARE BETWEEN YOU AND XYENTERPRISE OR ANY OTHER PARTY.  SOFTWARE LICENSE QUANTITIES, SOFTWARE DESCRIPTIONS, PURCHASED OPTIONS AND NUMBER OF USER(S) WILL BE DEFINED IN A PURCHASE ORDER OR OTHER VALID FORM OF AGREEMENT ACKNOWLEDGED IN WRITING BY XYENTERPRISE OR THE PARTY WHO PROVIDED THIS SOFTWARE TO YOU (\"ORDER\").  IF YOU DO NOT AGREE TO ALL OF THE TERMS AND CONDITIONS OF THIS LICENSE AGREEMENT, PROMPTLY RETURN THE UNUSED SOFTWARE TO THE PARTY FROM WHOM YOU OBTAINED THE SOFTWARE.\n\nTERMS AND CONDITIONS OF SOFTWARE LICENSE\n \n1.\tGRANT OF LICENSE; USE RESTRICTIONS.  In consideration for the payment of a license fee, XyEnterprise grants to you (the\"Licensee\") a nontransferable, perpetual (except as provided below), and nonexclusive right to use Software, solely forLicensee�s internal business purposes.  Under no circumstances may Software be used in any manner for more than the number of server(s) or user(s) defined in the applicable Order.  Certain software options operate in conjunction with license administration software and a license authorization key provided by XyEnterprise or its representative.  Licensee shall take no steps to avoid or defeat the purpose of the authorization key.  Licensee agrees that it shall not reverse engineer, decompile or disassemble any portion of Software.  Prior to disposing of any media or apparatus containing Software, Licensee will ensure that any Software contained on such media or stored in such apparatus has been completely erased or otherwise destroyed.  Licensee may not modify, adapt, translate, distribute, network, lease, loan, host, resell for profit or create derivative works based upon Software or any portion thereof.  The Software license granted under this Agreement does not allow Licensee the right to offer access to the Software by any third party on a rental or hosted basis. Any such third party access must be approved in writing by XyEnterprise and will be subject to a separate Agreement governing such terms of use. Certain software products  are entirely third party software to which XyEnterprise has the rights to transfer a license to Licensee.  These software products are provided to Licensee subject to the license agreement provided with them. XyEnterprise and the third party vendor reserve the right to enforce this third party software license. Open source software, if any, provided in conjunction with the Software is considered third party software under this Agreement and is provided subject to any applicable end user agreements.\n2.\tCOPY RESTRICTIONS.  Licensee may reproduce the Software in only those full or partial copies which are necessary for backup or archival purposes to support the right to use licensed herein.  Licensee agrees that all copies of Software shall be owned by XyEnterprise, shall be considered Software subject to this Agreement and Licensee shall reproduce the same proprietary and copyright notices and legends on all such copies as included by XyEnterprise on the authorized copy of Software originally provided by XyEnterprise.\n3.\tOWNERSHIP OF SOFTWARE.  Licensee agrees that no title to Software, or the intellectual property in any Software, or in any software copy, is transferred to Licensee, and that all rights not expressly granted to Licensee hereunder are reserved by XyEnterprise. Licensee owns the media on which the Software is originally or subsequently recorded, but XyEnterprise retains ownership of all copies of the Software itself.\n4.\tTRANSFER RESTRICTIONS. Except with XyEnterprise�s prior written consent, neither this Agreement nor any rights or obligations under this Agreement, in whole or in part, shall be sublicensed, assigned or otherwise transferred.\n5.\tEXPORT RESTRICTIONS.  Licensee agrees that Licensee does not intend to, and will not, without prior written approval (if required) of the Office of Export Administration of the U.S. Department of Commerce (or any other governmental agency from which approval is required) transmit, either directly or indirectly, any portion of the Software to any country for which such approval is required.\n6.\tTERMINATION.  Attempts by Licensee to defeat or disable license authorization keys or to reverse engineer, decompile or disassemble the Software are considered a material breach of this Agreement.  Upon confirmation of such a breach, XyEnterprise may, at any time thereafter, and in addition to any other available remedies, terminate this Agreement and all licenses and rights granted to Licensee under this Agreement.  Certain Software contains third party Software.  XyEnterprise and/or appropriate third party vendors reserve the right to enforce this third party license if Licensee fails to comply with the terms of this Agreement. \n7.\tINFRINGEMENT.  XyEnterprise will defend Licensee against any claim that the use or sale of Software infringes a United States or other country that complies with and adheres to the European Patent Convention (i) patent, (ii) copyright, (iii) trade secret or (iv) other proprietary right.  XyEnterprise will pay resulting costs, damages and attorney�s fees finally awarded against Licensee on the condition that: (a) Licensee notifies XyEnterprise in writing immediately upon Licensee�s receipt of any such claim; (b) XyEnterprise has sole control of the defense, and all related settlement negotiations for, any such claim; and (c) Licensee cooperates fully in the defense of, and furnishes all related evidence in its control relating to, any such claim. XyEnterprise is not liable for infringement claims based on (i) the combination, operation or use of one or more products with equipment, data or software not supplied or recommended by XyEnterprise if the claim would have been avoided by use of other equipment, data or software;  (ii) modifications to one or more products if the modifications were not made or recommended by XyEnterprise or if such claim would have been avoided by the absence of the modification, and (iii) products originally supplied to XyEnterprise by a third party to the extent that the vendor limited its liability to XyEnterprise for such claim. \n8.\tGOVERNMENT END-USER NOTICE: Each product sold pursuant to this Agreement is a \"Commercial Item,\" as that term is defined at 48 C.F.R. � 2.101, consisting of \"Commercial Computer Software\" and \"Commercial Computer Software Documentation,\" as such terms are used in 48 C.F.R. � 12.212 and 48 C.F.R. � 227.7202, as applicable.  Consistent with 48 C.F.R. �� 12.212, 227.7202-1 through 227.7202-4, the Commercial Computer Software and Commercial Computer Software Documentation are being licensed to U.S. Government end-users (a) only as Commercial Items and (b) with only those rights as are granted to all other end-users pursuant to the terms and conditions herein.\n \nThe following additional statement applies only to procurements subject to DFARS subpart 227.4 (1988):  \"restricted rights � use, duplication and disclosure by the government is subject to restrictions set forth in subparagraph (c)(1)(ii) of the Rights in Technical Data and Computer Software clause at DFARS 252.227 7013 (1988).\" The Software and documentation were developed entirely at private expense and without the use of any U.S. government funds.  Contractor/manufacturer is XyEnterprise Inc., with an office at 101 Edgewater Dr., Wakefield, MA 01880-1296.\n\n \n\nLIMITED WARRANTY AND DISCLAIMER OF WARRANTY\nXyEnterprise warrants that it has the authority and right to license the Software, and that the Software will substantially conform to the printed specifications which are in effect on the date of original delivery of such Software.  At no charge to Licensee, XyEnterprise shall use reasonable efforts to provide corrections to remedy any failure to so conform which are reported in writing by Licensee during the warranty period. XyEnterprise�s warranty obligation shall extend for a period of ninety (90) days after the date of the original installation of Software and is solely for the benefit of Licensee. The foregoing states Licensee�s sole and exclusive remedy for a breach of the warranty given herein. \nEXCEPT AS PROVIDED IN THIS SECTION, THE SOFTWARE IS PROVIDED TO LICENSEE ON AN \"AS IS\" BASIS, AND XYENTERPRISE MAKES NO OTHER WARRANTY OF ANY KIND, EXPRESSED OR IMPLIED, WITH REGARD TO THE SOFTWARE LICENSED HEREUNDER.  XYENTERPRISE DOES NOT WARRANTY OR REPRESENT THAT THE SOFTWARE WILL OPERATE UNINTERRUPTED OR ERROR FREE OR THAT ALL DEFECTS IN THE SOFTWARE ARE CORRECTABLE OR WILL BE CORRECTED.  THIS WARRANTY SHALL NOT APPLY IF SOFTWARE IS USED OTHER THAN IN ACCORDANCE WITH XYENTERPRISE�S INSTRUCTIONS, OR IF ANY OF LICENSEE�S HARDWARE EQUIPMENT OR OTHER NON-XYENTERPRISE PRODUCTS ASSOCIATED WITH THE USE OF SOFTWARE MALFUNCTION. XYENTERPRISE�S ENTIRE LIABILITY, AND LICENSEE�S EXCLUSIVE REMEDY FOR ANY DEFECTS IN THE SOFTWARE AFTER THE EXPIRATION OF THIS LIMITED WARRANTY, SHALL BE TO OBTAIN XYENTERPRISE�S SOFTWARE MAINTENANCE PURSUANT TO XYENTERPRISE�S THEN CURRENT STANDARD TERMS AND CONDITIONS OF SUPPORT. THE FOREGOING WARRANTIES ARE IN LIEU OF, AND XYENTERPRISE DISCLAIMS, ALL OTHER WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  THE PROVISIONS OF THIS AGREEMENT SHALL CONTROL AND HAVE PRECEDENCE OVER THE TERMS OF ANY PURCHASE ORDER FROM LICENSEE WITH RESPECT TO LICENSED PROGRAMS.\nSome states do not allow the exclusion of implied warranties, so the exclusion above may not apply to Licensee.  This warranty gives Licensee specific legal rights, and License may have other rights which vary from state to state.\nLIMITATION OF LIABILITY\nIN NO EVENT SHALL XYENTERPRISE OR XYENTERPRISE�S LICENSORS BE LIABLE TO LICENSEE FOR ANY SPECIAL, CONSEQUENTIAL, INCIDENTAL OR INDIRECT DAMAGES OF ANY KIND (INCLUDING WITHOUT LIMITATION LOSS OF PROFITS OR DATA AND PERSONAL INJURY), WHETHER OR NOT XYENTERPRISE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSS, HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY ARISING OUT OF THIS AGREEMENT.  IN NO EVENT WILL XYENTERPRISE BE LIABLE FOR ANY CLAIM AGAINST LICENSEE BY A THIRD PARTY, AND LICENSEE HEREBY AGREES TO INDEMNIFY AND HOLD XYENTERPRISE HARMLESS FOR ANY CLAIMS FOR COST, DAMAGE, EXPENSE OR LIABILITY ARISING OUT OF OR IN CONNECTION WITH THE USE OF THE SOFTWARE LICENSED HEREUNDER.  SOME STATES DO NOT ALLOW THE LIMITATION OR EXCLUSION OF LIABILITY FOR INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THE LIMITATION ABOVE MAY NOT APPLY TO LICENSEE.\nGOVERNING LAW; DISPUTES\nThis Agreement shall be governed by and interpreted in accordance with the laws of the Commonwealth of Massachusetts, USA.  The parties hereby agree that any dispute regarding the interpretation or validity of, or otherwise arising out of this Agreement, or relating to the products licensed hereunder shall be subject to the exclusive jurisdiction of the appropriate federal or state located in the Commonwealth of Massachusetts. \t\t\n\tRev 05-10\n","description":"\n  This documentation will help you learn how to use\n  XPP REST’s rich library of web-connected functionality.\n\n  Most commands use the `{path}` parameter, a logical multi-part path to a handle,\n  class, group, job, or division in this colon-delimited form: `handle:class:group:job:div`.\n  Do not include the `CLS_`, `GRP_`, `JOB_`, or `DIV_` prefixes in this parameter. Here\n  is an example path: `first:xyvision:comp:blkmerge:1-blkmerge`.\n\n  Many commands accept an `option` parameter. It must not contain `-cd /path/to/document` or the command will fail.\n"},"paths":{"/xpp/ping":{"get":{"tags":["utilities"],"summary":"XPP REST Server Welfare Check","description":"Request a “ping” to determine if the server is operational.","responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"ping"}}}}}}}}},"/xpp/status":{"get":{"tags":["utilities"],"summary":"XPP REST Server Runtime Status","description":"Get the status of the XPP REST server, including the XPP version, REST version, key XPP environment variables, and 'node.js' modules included with the installation.","responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","properties":{"version":{"type":"string","description":"XPP REST server version"},"xppversion":{"type":"string","description":"XPP software version"},"cwd":{"type":"string","description":"The current working directory of the REST server"},"user":{"type":"string","description":"The user name of the service running the REST server"},"modules":{"type":"object","description":"Object containing the Node module dependencies used by XPP REST (too many to itemize)"},"env":{"type":"object","description":"The XPP environment variables","properties":{"XYV_EXECS":{"type":"string","description":"The location of `xz`"},"XYV_STYLES":{"type":"string","description":"The location of `sd_liz`"},"XYV_TMPS":{"type":"string","description":"The location of `tmp`"},"PSRESOURCEPATH":{"type":"string","description":"The location of the fonts"},"XYV_ADVP_NODE":{"type":"string","description":"The ADVP system name"},"PATH":{"type":"string","description":"Lookup paths for programs"},"PDFFLY":{"type":"string","description":"The location of PDF-to-EPS image converter"}}}}}}}}}}},"/xpp/license":{"get":{"tags":["utilities"],"description":"Check a license feature to determine if it is available using the `acctest` program.","summary":"XPP License Feature Check","security":[{"bearerAuth":[]}],"parameters":[{"in":"query","name":"feature","schema":{"type":"string"},"required":false,"description":"License feature name (default=`compose`)"}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","example":"Feature COMPOSE is allowed","description":"Message from the license-checking utility"},"code":{"type":"boolean","example":true,"description":"\\`true` if the feature is allowed, `false` otherwise"}}}}}}}}},"/xpp/register":{"post":{"tags":["utilities"],"summary":"Register a User","description":"Obtain user authorization for the requested username and email address. This returns a “Bearer” authorization token and expects the caller to place this token in the `Authorization` header when accessing protected API endpoints.","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The name of the user","example":"Jane Doe"},"email":{"type":"string","description":"The user’s email address","example":"jdoe@example.com"}},"required":["name","email"]}}}},"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","example":"Jane Doe"},"email":{"type":"string","example":"jdoe@example.com"},"token":{"type":"string","example":"eyJhbGciOi..."}}}}}},"400":{"description":"Bad response for a bad request","$ref":"#/components/responses/CodeMessage"}}}},"/xpp/docs/{path}/processes/toxsf":{"get":{"tags":["divisions"],"summary":"Import Text to XSF","description":"Import text using the toxsf program on the Division. It is assumed that the user has created an ASCII or XML file in the Division, and that the options argument will contain the name of the file as well as any other necessary switches. The `-xsh -S` options are automatically added. The caller can add other options as needed.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"},{"in":"query","name":"options","required":true,"description":"Options for `toxsf`; see <a href=\"./cmdutils.pdf#toxsf\" target=\"_x\">its command line options</a>","schema":{"type":"string","example":"-I12 tascii"}}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"Status code from the `toxsf` program"},"message":{"type":"string","description":"The output of the `toxsf` command"}}}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/showxsf":{"get":{"tags":["divisions"],"summary":"Show XSF Information","description":"Run the `showxsf` program on a Division. Additional options are available using the `options` parameter.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"},{"in":"query","name":"options","required":false,"description":"Options for `showxsf`; see <a href=\"./cmdutils.pdf#showxsf\" target=\"_x\">its command line options</a>","schema":{"type":"string","example":"-dl +P +G"}}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"Status code from the `showxsf` program"},"message":{"type":"string","description":"The output summary of the `showxsf` command"}}}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/conferenced":{"get":{"tags":["divisions"],"summary":"Conferenced","description":"Determine if a division is conferenced.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"}],"responses":{"200":{"description":"A `code` of `1` means the division is conferenced and a `0` means otherwise.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","enum":["0","1"],"description":"Conferenced Status:\n  * `0` div is _not_ conferenced\n  * `1` div is _indeed_ conferenced\n"},"message":{"type":"string","example":"completed","description":"The string `completed`"}}}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/mlmode":{"get":{"tags":["divisions"],"summary":"Get XML Mode","description":"Determine if a Division is in XML/SGML/CSS-XML mode. A value will be returned signifying the mode. The mode is a function of the value in the Division Ticket, unless the value is default, in which case the mode is taken from the Job Ticket.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"}],"responses":{"200":{"description":"Good response where 0 = off, 1 = xml, 2 = sgml, 3 = css-xml","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","enum":["0","1","2","3"],"example":0,"description":"0 = off, 1 = xml, 2 = sgml, 3 = css-xml"},"message":{"type":"string","example":"completed","description":"The string `completed`"}}}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"post":{"tags":["divisions"],"summary":"Set XML Mode","description":"Set a Division's XML/SGML mode to an appropriate mode value.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"options":{"type":"string","enum":["default","off","xml","sgml","css-xml"],"description":"the Division's XML/SGML mode"}}}}}},"responses":{"200":{"description":"the XML/SGML mode has been set"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/xychange":{"get":{"tags":["divisions"],"summary":"Translate Text","description":"Translate a text file in a Division using the `xychange` program, with options.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"},{"in":"query","name":"infile","required":true,"description":"the input file name (at the document level)","schema":{"type":"string"}},{"in":"query","name":"outfile","required":true,"description":"the output file name (at the document level)","schema":{"type":"string"}},{"in":"query","name":"options","required":false,"description":"Options for `xychange`; see <a href=\"./cmdutils.pdf#xychange\" target=\"_x\">its command line options</a>","schema":{"type":"string","example":"-debug"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/split":{"get":{"tags":["divisions"],"summary":"Split Division","description":"Split a division into two using the `divsplit` program. The `{path}` parameter specifies the destination division and will contain the pages split off from the source division. Use the `div` parameter (without the `DIV_` prefix) to specify the source division. The `-xsh -s` option is automatically added to the argument list. The caller can add other options as needed.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"},{"in":"query","name":"div","required":true,"description":"The name of the source division (without the `DIV_` prefix)","schema":{"type":"string","example":"readme"}},{"in":"query","name":"options","required":false,"description":"Options for `divsplit`; see <a href=\"./cmdutils.pdf#divsplit\" target=\"_x\">its command line options</a>","schema":{"type":"string","example":"-p5 -P10"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/merge":{"get":{"tags":["divisions"],"summary":"Merge Divisions","description":"This runs the `divmerge` program to merge multiple divisions. The \"path\" is the merge destination. The `-xsh -s` options are automatically added. The caller can add other options as needed.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"},{"in":"query","name":"divs","required":true,"description":"A comma-separated list of source division names, without the `DIV_` prefix.","schema":{"type":"string","example":"readme"}},{"in":"query","name":"options","required":false,"description":"Options for `divmerge`; see <a href=\"./cmdutils.pdf#divmerge\" target=\"_x\">its command line options</a>","schema":{"type":"string","example":"-p2"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/compare":{"get":{"tags":["divisions"],"summary":"Compare XML Using xppCompare","description":"Run the `xppcompare` program on two files in a division with options. This assumes that the input files have already been moved into the path.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"},{"in":"query","name":"infile1","required":true,"description":"Source XPP input file name (at the division level)","schema":{"type":"string"}},{"in":"query","name":"infile2","required":true,"description":"Source external input file name (at the division level)","schema":{"type":"string"}},{"in":"query","name":"outfile","required":true,"description":"the output file name (at the division level)","schema":{"type":"string"}},{"in":"query","name":"options","required":false,"description":"Options for `xppcompare`; see <a href=\"./cmdutils.pdf#xppcompare\" target=\"_x\">its command line options</a>","schema":{"type":"string","example":"-xsf"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage","description":"Good response; `code` will be `1` if there are no differences (when using the `-xsf` option) or `0`"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/xydiff":{"get":{"tags":["divisions"],"summary":"Compare XML Using XyDiff","description":"Run the `xydiff` program on two files in a division with options. This assumes that the input files have already been moved into the path.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"},{"in":"query","name":"infile1","required":true,"description":"The first input file name (at the division level)","schema":{"type":"string"}},{"in":"query","name":"infile2","required":true,"description":"The second input file name (at the division level)","schema":{"type":"string"}},{"in":"query","name":"outfile","required":true,"description":"the output file name (at the Division level)","schema":{"type":"string"}},{"in":"query","name":"options","required":false,"description":"Options for `xydiff`; see <a href=\"./cmdutils.pdf#xydiff\" target=\"_x\">its command line options</a>","schema":{"type":"string","example":"-p 1"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/xslt":{"get":{"tags":["divisions"],"summary":"Transform XML","description":"Transform an XML file using the XSLT processor. The input file must be located in the division path. Normally, the XSL file is at the document path, but it will also be located by using the job and library lookup it if is not found at the division path. Use the options to add additional switches (see the `Xalan` or `xppxslt` program for a list of valid options). The XSLT results can be returned as a string by using `stdout` as the output file name.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"},{"in":"query","name":"infile","required":true,"description":"Name of the input file (at the division level)","schema":{"type":"string"}},{"in":"query","name":"outfile","required":true,"description":"Name of the output file to be created at the division level, or `stdout` to return the transformed XML in the response","schema":{"type":"string","example":"stdout"}},{"in":"query","name":"xsl","required":true,"description":"Name of the XSL conversion file, including the .xsl extension (with job/library lookup)","schema":{"type":"string"}},{"in":"query","name":"xsl2","required":false,"default":"false","description":"If `true`, use the Saxon parser","schema":{"type":"string","enum":["true","false"],"example":"false"}},{"in":"query","name":"options","required":false,"description":"Additional options for `Xalan`","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/updatedt":{"get":{"tags":["divisions"],"summary":"Update Division Ticket","description":"Update the division ticket with values using the `update_dt` program.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"},{"in":"query","name":"options","required":false,"description":"Options for `update_dt`; see <a href=\"./cmdutils.pdf#update_dt\" target=\"_x\">its command line options</a>","schema":{"type":"string","example":"-blankok"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/div/ticket":{"get":{"tags":["divisions"],"summary":"Get Division Ticket Values","description":"Get field value(s) from a division ticket.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"},{"in":"query","name":"fields","style":"form","explode":false,"required":false,"description":"A comma-separated list of field names available in the DT spec. If this parameter is omitted, all fields are returned.","schema":{"type":"array","items":{"type":"string"}},"example":["divmsg","colorspec"]}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","description":"Object containing the requested name/values pairs from the DT spec"}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"post":{"tags":["divisions"],"summary":"Set Division Ticket Values","description":"Set multiple field values in the division ticket for a division. The ticket can be copied from a style library prior to updating by using the `library` option.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPath"}],"requestBody":{"description":"The `fields` or `library` properties must be specified.","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"type":"array","description":"Array of field/value pairs to set in the division ticket","items":{"type":"string"},"example":["divmsg","This is a message","colorspec","myname"]},"library":{"type":"string","description":"Source library name from which to copy the division ticket prior to modification (without the `L` prefix)","example":"syslib"}}}}}},"responses":{"200":{"description":"Division ticket values have been set successfully."},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/compose":{"get":{"tags":["divisions / jobs"],"summary":"Compose","description":"Compose a Division or Job. Composition options can specified using the \"options\" parameter. If composing a job, additional options are available via the `jobcomp` program.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"},{"$ref":"#/components/parameters/NoWait"},{"in":"query","name":"options","required":false,"description":"Composition options; see command line options for <a href=\"./cmdutils.pdf#compose\" target=\"_x\">compose</a> or <a href=\"./cmdutils.pdf#jobcomp\" target=\"_x\">jobcomp</a>.","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage","description":"Good response when `nowait` is `false`"},"202":{"$ref":"#/components/responses/NoWait"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/print":{"get":{"tags":["divisions / jobs"],"summary":"Print","description":"Print a division or job into PDF or Postscript. It will output to a printer or it will create a PDF or Postscript file depending on the options. By default, the file will be created in the `XYV_TMPS` folder with the name derived from the job and division name. To create within the job or division, use `-df .` and name the file using `-pn name`. Files can be placed in other folders on the XPP server by using an absolute path with the `-df` option.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"},{"$ref":"#/components/parameters/NoWait"},{"in":"query","name":"options","required":false,"description":"Print options; see command line options for <a href=\"./cmdutils.pdf#psfmtdrv\" target=\"_x\">psfmtdrv</a>, <a href=\"./cmdutils.pdf#divpdf\" target=\"_x\">divpdf</a>, or <a href=\"./cmdutils.pdf#cap\" target=\"_x\">cap</a>.","schema":{"type":"string","example":"-df . -pn filename"}},{"in":"query","name":"pdfdirect","required":false,"default":"false","description":"If `true`, print uses the Direct-to-PDF options","schema":{"type":"string","enum":["true","false"]}},{"in":"query","name":"cap","required":false,"default":"false","description":"If `true`, print uses Compare-and-Print Pages","schema":{"type":"string","enum":["true","false"]}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage","description":"Response when `nowait` is `false`"},"202":{"$ref":"#/components/responses/NoWait"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/fromxsf":{"get":{"tags":["divisions / jobs"],"summary":"Export Text","description":"Export text from the division or job using the `fromxsf` program and place it in the named file in the division or job path. The `-xsh -s` options are automatically added; the caller can add other options as needed. The output file should be added in the `options` parameter. Without this options, it will output to `trawz` at the division or job level.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"},{"in":"query","name":"options","required":false,"description":"Options for `fromxsf`; see <a href=\"./cmdutils.pdf#fromxsf\" target=\"_x\">its command line options</a>.","schema":{"type":"string","example":"-p5 -P8 tchap1"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/printbaseline":{"post":{"tags":["divisions / jobs"],"summary":"Set Print Baseline","description":"Use `cap` to establish a print baseline for pages within a division or job. All pages will be marked as unchanged.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"}],"requestBody":{"description":"Options for `cap`; see <a href=\"./cmdutils.pdf#cap\" target=\"_x\">its command line options</a>.","content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"options":{"type":"string","example":"-sbl"}}}}}},"responses":{"200":{"description":"Baseline values have been set successfully"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/xyedgar":{"get":{"tags":["divisions / jobs"],"summary":"EDGAR","description":"Produce an EDGAR document for a division or job using the `xyedgar` program. The argument `-xsh` is automatically added. The defaults name is name of the division. The caller can add other options as needed. To create a specific file name, include the `-on` option.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"},{"in":"query","name":"options","required":false,"description":"Options for `xyedgar`; see <a href=\"./cmdutils.pdf#xyedgar\" target=\"_x\">its command line options</a>.","schema":{"type":"string","example":"-on filename"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/loep":{"get":{"tags":["divisions / jobs"],"summary":"List of Effective Pages (LOEP)","description":"Create a “list of effective pages” for a job using the `loep` program. The `-xsh` option is automatically added.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"},{"in":"query","name":"options","required":false,"description":"Options for `loep`; see <a href=\"./cmdutils.pdf#loep\" target=\"_x\">its command line options</a>.","schema":{"type":"string","example":"-temp"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/spellcheck":{"get":{"tags":["divisions / jobs"],"summary":"Spell Check","description":"Run spell check on the division or job using the `divspell` program. Options `-xsh -sort -t -nol` are automatically added. The caller can add other options as needed. If the options parameter does not include a file name, the spell list will be returned in the output. If a file name is included, the spelling words will be written to the file.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"},{"in":"query","name":"options","required":false,"description":"Options for `divspell`; see <a href=\"./cmdutils.pdf#divspell\" target=\"_x\">its command line options</a>.","schema":{"type":"string","example":"-temp"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/inuse":{"get":{"tags":["divisions"],"summary":"In Use","description":"Determine if a division or job is in use.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/DivPathParam"}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage","description":"Good response; `code` will be `1` if it’s in use, otherwise it will be `0`"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/sdedit":{"get":{"tags":["divisions / jobs"],"summary":"Style Input/Output","description":"Run the `sdedit` program on a style file in a division or job. The caller must provide all of the arguments to the program in the `options` parameter and it must contain `-ain` or `-aout` or the command will fail.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"},{"in":"query","name":"options","required":true,"description":"Options for `sdedit`, including the style name and type; see <a href=\"./cmdutils.pdf#sdedit\" target=\"_x\">its command line options</a>","schema":{"type":"string","example":"-aout style.txt"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/command":{"get":{"tags":["divisions / jobs"],"summary":"Command","description":"Run any command in `xz/bin` on a division or job. Consult the <a href=\"./cmdutils.pdf\" target=\"_x\">Command Line Utilities</a> reference.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"},{"$ref":"#/components/parameters/NoWait"},{"in":"query","name":"command","required":true,"description":"The name of the commmand in `xz/bin` to run","schema":{"type":"string"}},{"in":"query","name":"options","required":false,"description":"Options for whatever command is executed","schema":{"type":"string"}},{"in":"query","name":"ecode","required":false,"default":0,"description":"Error code for exit criteria 1 => OK if 0 >= exitcode < 128","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage","description":"Response when `nowait` is `false`"},"202":{"$ref":"#/components/responses/NoWait"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/stylename":{"get":{"tags":["divisions / jobs"],"summary":"Get Active Style","description":"Get the active style bundle name from the division or job. This will return the alternate style from the division ticket. If it is blank, the default style from the job ticket will be returned.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the style found","example":"xybase2"}}}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"post":{"tags":["divisions / jobs"],"summary":"Set Active Style","description":"Set the active style name in the division or job. The division or job ticket is modified to set the active alternate style. Changing the job style may set the style for all divisions (unless overridden at the division level). Changing the division style will set the alternate style.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"}],"requestBody":{"description":"Contains the name of the active style","required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"name":{"type":"string","example":"xybase2"}},"required":["name"]}}}},"responses":{"200":{"description":"The active style name has been set successfully"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/pages":{"get":{"tags":["divisions / jobs"],"summary":"Page Count","description":"List page count for a division or job using the `showpages` command. The result is returned as an array of objects describing the page number totals. If it’s a division, the array only contains one element.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Division name","example":"readme"},"main":{"type":"string","description":"Division name","example":"1"},"start":{"type":"string","description":"Starting multi-part page number","example":"1"},"end":{"type":"string","description":"Ending multi-part page number","example":"1"},"foot_lf":{"type":"string","description":"Total number of footnote L&F pages","example":"0"},"pick_lf":{"type":"string","description":"Total number of pickup L&F pages","example":"1"},"story_lf":{"type":"string","description":"Total number of story L&F pages","example":"0"},"conference":{"type":"string","enum":["yes","no"],"description":"Conference flag","example":"no"}}}}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/images":{"get":{"tags":["divisions / jobs"],"summary":"List Images","description":"List the images used in the division or job using the `listgr` program. Add more options using the `options` parameter.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobDivPath"},{"in":"query","name":"options","required":false,"description":"Options for `listgr`; see <a href=\"./cmdutils.pdf#listgr\" target=\"_x\">its command line options</a>.","schema":{"type":"string","example":"-pid"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"202":{"$ref":"#/components/responses/NoWait"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobDivPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/copy":{"post":{"tags":["document management"],"summary":"Copy Document","description":"Copy a document by providing the source path in `sourcePath` and the destination path in `path`. It is the caller’s responsibility to make sure that both paths are at the same level. This function cannot be used to copy handles. If the destination document already exists, it will be overwritten.","security":[{"bearerAuth":[]}],"parameters":[{"in":"path","name":"path","required":true,"description":"The destination path expressed in colon-delimited form","schema":{"type":"string","example":"first:xpputils:system:xycharset:feedme"}},{"in":"query","name":"sourcePath","required":true,"description":"The source path expressed in colon-delimited form","schema":{"type":"string","example":"first:xpputils:system:xycharset:readme"}},{"in":"query","name":"nodiv","required":false,"default":false,"description":"If the source and destination is a job and `nodivs` is `true`, the divisions will _not_ be copied","schema":{"type":"boolean","example":false}}],"responses":{"200":{"description":"The document has been copied successfully"},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs":{"post":{"tags":["document management"],"summary":"Create Document","description":"Create a new document path. A document handle cannot be created.","security":[{"bearerAuth":[]}],"requestBody":{"description":"Example to create a job but not copy the job ticket: { \"path\": \"first:xyvision:comp:new\", \"ticket\": false }","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"path":{"type":"string","description":"The “logical” document path in the form `handle:class:group:job:div` describing a handle, class, group, job or division","example":"first:xyvision:comp:new"},"dirname":{"type":"string","description":"The name of the folder or sub-folder to be created","example":null},"ticket":{"type":"boolean","description":"If `true` and a job path is created, the job ticket will be copied from the group level. If it does not exist, it will be copied from Lsyslib. If a divison path is created, a division ticket will be copied from Lsyslib.","default":true}},"required":["path"]}}}},"responses":{"201":{"description":"The document path has been created successfully; the `Location` header in the response contains the URL for the document that was created"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadMiscPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}":{"delete":{"tags":["document management"],"summary":"Delete Document","description":"Removes the document from the XPP path. You cannot delete handles.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/MiscPath"}],"responses":{"200":{"description":"The document has been deleted successfully"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadMiscPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"get":{"tags":["document management"],"summary":"List Documents","description":"Return a list of the document subdirectories at the requested `path`. If this parameter is empty, it will return the list of dume  nt handles. Otherwise, it will return the list of the CLS, GRP, JOB, or DIV folders.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/MiscPath","required":false}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"},"example":["job.dld","job.dpd","job.log","job.track"]}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/tempfile":{"post":{"tags":["document management"],"summary":"Create Temporary File","description":"Create a temporary file in the provided `path`. The filename will begin with `xpp-`, end with `.tmp`, and contain a unique identifier in the middle to ensure a duplicate filename is not created. Example: `xpp-14440-DGioChQHlX2g-.tmp` __Note:__ Temporary files should be deleted when they are no longer needed.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/MiscPath"}],"responses":{"201":{"description":"Good response; the `Location` header in the response will have XPP REST’s URL for the temporary file created","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"The value of `0`"},"message":{"type":"string","description":"The name of the temporary file created"}}}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadMiscPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/status":{"get":{"tags":["document management"],"summary":"Document Status","description":"Get information about the document at the provided `path`.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/MiscPath"}],"responses":{"200":{"$ref":"#/components/responses/PathStatus"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadMiscPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/usercommand":{"get":{"tags":["document management"],"summary":"User Command","description":"Run a user-defined command on a document path with options. The path is automatically added as the first argument. The caller is responsible for all other options. The command must be located in the `xz/xpprest/user` directory.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/MiscPath"},{"in":"query","name":"command","required":true,"description":"The name of the command in `xz/xpprest/user` to execute","schema":{"type":"string","example":"testws.pl"}},{"in":"query","name":"options","required":false,"description":"Additional options to pass to the user-defined command","schema":{"type":"string"}},{"$ref":"#/components/parameters/NoWait"}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage","description":"Good response when `nowait` is `false`"},"202":{"$ref":"#/components/responses/NoWait"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadMiscPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/processes/{id}":{"get":{"tags":["document management"],"summary":"Command Status","description":"Get the command status from a program that has been run with `nowait=true`.","security":[{"bearerAuth":[]}],"parameters":[{"in":"path","name":"id","required":true,"description":"The identifier for a command that might still be running, such as “User Command” and “Compose”. If `id` is `list`, it will return an array of processes running within the last 24 hours. If `id` is `delete`, it will remove the logs of all processes.","schema":{"type":"string","example":"list"}}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"Exit code of the command or `running` if it hasn’t finished","example":4294967295},"message":{"type":"string","description":"Output text from the command","example":"ERROR: Cannot access Document Assembly Ticket"},"time":{"type":"string","description":"Time (in ISO UTC format) that the command finished","example":"2024-11-19T21:15:24.211Z"}}}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/files/{name}":{"delete":{"tags":["document management"],"summary":"Delete File","description":"Removes the document from the XPP path. You cannot delete handles.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/MiscPath"},{"in":"path","name":"name","required":true,"description":"Name of a file or directory/file (dir:file) within the document path to delete","schema":{"type":"string","example":"xpp-14440-DGioChQHlX2g-.tmp"}}],"responses":{"200":{"description":"The file has been deleted successfully"},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"get":{"tags":["document management"],"summary":"Get File","description":"Get a file from the document path. Normally, the file is sent as an attachment in the response body. However, if the HTTP header requests `text/*` or `application/xml`, the file’s literal contents are placed unencoded in the response body. If `inline` is `true`, a web browser will attempt to display the file. Otherwise, the file will be “attached” and a web browser will try to save it.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/MiscPath"},{"in":"path","name":"name","required":true,"description":"The name of the file to get","schema":{"type":"string","example":"job.log"}},{"in":"query","name":"inline","required":false,"default":false,"description":"Make an “inline” attached file","schema":{"type":"boolean","example":false}}],"responses":{"200":{"description":"Good response containing the file requested"},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"post":{"tags":["document management"],"summary":"Put File","description":"Put a file in the document path. It expects the contents to be encoded as `multipart/form-data`.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/MiscPath"},{"in":"path","name":"name","required":true,"description":"The name of the file to put into the document path. Use colons to specify sub-directories, e.g. `dir:file`.","schema":{"type":"string","example":"trawz"}}],"requestBody":{"description":"File contents to upload","required":true,"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"filename":{"type":"string","format":"binary"}},"required":["filename"]}}}},"responses":{"200":{"description":"The file was successfully uploaded"},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/files/{name}/copy":{"post":{"tags":["document management"],"summary":"Copy File","description":"Copy a file from one place to another. To copy a file to a different document path, provide the destination in `path` and the source in `sourcePath`. The destination file is always overwritten. To copy the file in the current document, provide the destination as `name` and the source file using the `sourceName` option. The `name` and `sourceName` parameters are allowed to contain sub-directories (using a dir:name syntax), but will fail with an error if they contain `..`.","security":[{"bearerAuth":[]}],"parameters":[{"in":"path","name":"path","required":true,"description":"The destination path expressed in colon-delimited form","schema":{"type":"string","example":"first:xpputils:system:xycharset:feedme"}},{"in":"path","name":"name","required":true,"description":"The name of the file in the destination path","schema":{"type":"string","example":"trawz"}},{"in":"query","name":"sourcePath","required":true,"description":"The source path expressed in colon-delimited form","schema":{"type":"string","example":"first:xpputils:system:xycharset:readme"}},{"in":"query","name":"sourceName","required":false,"default":"name","description":"Optional file name to copy within a document path","schema":{"type":"string","example":"name"}}],"responses":{"200":{"description":"The file has been copied successfully"},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"409":{"description":"Source and destination are the same"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/files/{name}/status":{"get":{"tags":["document management"],"summary":"File Status","description":"Get information about the file at the provided `path`.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/MiscPath"},{"in":"path","name":"name","required":true,"description":"The name of the file in the document path to retrieve the information from. This can also be a sub-directory by including the path using the `:` separator; i.e. `dir:path`. The file and optional directory is relative to the document path.","schema":{"type":"string","example":"trawz"}}],"responses":{"200":{"$ref":"#/components/responses/PathStatus"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadMiscPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/graphics":{"get":{"tags":["graphics"],"summary":"List Image Libraries","description":"Get a list of the image libraries. This returns a list of XPP image libraries that are registered in the graphic configuration spec. Relative path libraries will also be returned, but they are not very useful.","security":[{"bearerAuth":[]}],"responses":{"200":{"description":"An array of available graphic libraries","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"},"example":["default"]}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/graphics/{lib}":{"get":{"tags":["graphics"],"summary":"List Images","description":"Get a list of the images in the specified `lib`","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/LibName"}],"responses":{"200":{"description":"An array of images found in the requested library","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"},"example":["golfer.eps"]}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/graphics/{lib}/{image}/status":{"get":{"tags":["graphics"],"summary":"Image Status","description":"Get the status of an image in a library","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/LibName"},{"$ref":"#/components/parameters/ImageName"}],"responses":{"200":{"description":"Object containing status information about the requested image","content":{"application/json":{"schema":{"type":"object","properties":{"lib":{"type":"string","description":"The requested library","example":"default"},"image":{"type":"string","description":"The requested image","example":"golfer.eps"},"osPath":{"type":"string","description":"The filesystem location of the image","example":"C:\\RWS\\XPP\\xz\\distr\\graphics\\golfer.eps"},"exists":{"type":"boolean","description":"Whether the image exists or not","example":true},"lastModified":{"type":"string","description":"The date the image was last modified","example":"2024-02-23T20:12:30.000Z"},"size":{"type":"string","description":"The size (in bytes) of the image file","example":"340260"}}}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/graphics/{lib}/{image}/info":{"get":{"tags":["graphics"],"summary":"Image Information","description":"Return information about an image using the `iq` command","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/LibName"},{"$ref":"#/components/parameters/ImageName"}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/graphics/{lib}/{image}":{"delete":{"tags":["graphics"],"summary":"Delete Image","description":"Delete an image in the library specified in an image library/name. The internal output format files (in .xyconvert and .xyconvertpdf) cannot be deleted. It is not possible to delete the image library.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/LibName"},{"$ref":"#/components/parameters/ImageName"}],"responses":{"200":{"description":"The image has been successfully deleted"},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"post":{"tags":["graphics"],"summary":"Put Image","description":"Upload an image into a library","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/LibName"},{"$ref":"#/components/parameters/ImageName"}],"requestBody":{"description":"File contents to upload","required":true,"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"filename":{"type":"string","format":"binary"}},"required":["filename"]}}}},"responses":{"200":{"description":"The image was successfully uploaded"},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"get":{"tags":["graphics"],"summary":"Get Image","description":"Get an image from a library","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/LibName"},{"$ref":"#/components/parameters/ImageName"},{"in":"query","name":"inline","required":false,"description":"If `true`, a web browser will attempt to display the file. Otherwise, the file will be “attached” and a web browser will try to save it.","default":false,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"The requested image"},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/graphics/{lib}/{image}/copy":{"post":{"tags":["graphics"],"summary":"Copy Image","description":"Copy an image from one library (or image) to another","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/LibName","description":"Destination image library"},{"$ref":"#/components/parameters/ImageName","description":"Destination image file"},{"in":"query","name":"sourceLib","description":"Source library from where to copy; if unspecified, defaults to `lib` parameter","required":false,"schema":{"type":"string","example":"default"}},{"in":"query","name":"sourceImage","required":false,"description":"Source image file to copy; if unspecified, defaults to `image` parameter","schema":{"type":"string","example":"golfer.eps"}}],"responses":{"200":{"description":"The image has been successfully copied"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/CodeMessage"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/graphics/{lib}/{image}/jpeg":{"get":{"tags":["graphics"],"summary":"Get JPEG","description":"Get a JPEG version of an image, regardless of its native image format","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/LibName"},{"$ref":"#/components/parameters/ImageName"},{"in":"query","name":"inline","required":false,"description":"If `true`, a web browser will attempt to display the file. Otherwise, the file will be “attached” and a web browser will try to save it.","default":false,"schema":{"type":"boolean"}},{"in":"query","name":"thumb","required":false,"default":0,"description":"Thumbnail size (in points) of the image, where `0` means unscaled","schema":{"type":"string"}}],"responses":{"200":{"description":"The requested image converted to a JPEG"},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/citi":{"get":{"tags":["jobs"],"summary":"Run CITI","description":"Run the CITI process on the job. The `-xsh` option is automatically added. The caller can add other options as needed.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobPath"},{"in":"query","name":"options","required":false,"description":"CITI options; see <a href=\"./cmdutils.pdf#citi\" target=\"_x\">its command line options</a>.","schema":{"type":"string","example":"-csda"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/verify":{"get":{"tags":["jobs"],"summary":"Verify Job","description":"The document assembly ticket will be used to check all of the divisions for page numbering consistency. If the divisions are valid, an empty string will be returned. Otherwise a summary of the problems are returned. The command will fail if the DA spec does not exist for the job. See the <a href=\"../documentation/cmdutils.pdf#jpverify\" target=\"_x\">jpverify command</a>.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobPath"}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/processes/updatejt":{"get":{"tags":["jobs"],"summary":"Update Job Ticket","description":"Update the job ticket using the `update_jt` program.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobPath"},{"in":"query","name":"options","required":true,"description":"Options for `update_jt`; see <a href=\"./cmdutils.pdf#update_jt\" target=\"_x\">its command line options</a>.","schema":{"type":"string","example":"+cssis"}}],"responses":{"200":{"$ref":"#/components/responses/CodeMessage"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/job/ticket":{"get":{"tags":["jobs"],"summary":"Get Job Ticket Values","description":"Get field value(s) from a job ticket.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobPath"},{"in":"query","name":"fields","style":"form","explode":false,"required":false,"description":"A comma-separated list of field names available in the JT spec. If this parameter is omitted, all fields are returned.","schema":{"type":"array","items":{"type":"string"}},"example":["jobmsg","colorspec"]}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","description":"Object containing the requested name/values pairs from the JT spec"}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"post":{"tags":["jobs"],"summary":"Set Job Ticket Values","description":"Set multiple field values in the job ticket for a job. Field names not specified are left unmodified.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobPath"}],"requestBody":{"description":"The `fields` or `library` properties must be specified.","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"type":"array","description":"Array of field/value pairs to set in the job ticket","items":{"type":"string"},"example":["jobmsg","This is a message","colorspec","myname"]},"library":{"type":"string","description":"Source library name from which to copy the job ticket prior to modification (without the `L` prefix)","example":"syslib"}}}}}},"responses":{"200":{"description":"Job ticket values have been set successfully."},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/assembly":{"get":{"tags":["jobs"],"summary":"Get Document Assembly Values","description":"Get the document assembly information.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobPath"},{"in":"query","name":"divname","required":true,"description":"Name of the division (without the `DIV_` prefix) to retrieve values from","schema":{"type":"string","example":"readme"}},{"in":"query","name":"fields","style":"form","explode":false,"required":false,"description":"A comma-separated list of fields you want returned. If this parameter is omitted, all fields are returned.","schema":{"type":"array","items":{"type":"string"}},"example":["citi_active"]}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","description":"Object containing the requested name/values pairs"}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"post":{"tags":["jobs"],"summary":"Set Document Assembly Values","description":"Set multiple field values in a document assembly ticket. Field values not specified are left unmodified. If the `divname` cannot be found, the division name and its field values will be appended to the end of the ticket. If `fields` does not exist, the rule is deleted. All of the division rules can be deleted by setting `empty` to `true`.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobPath"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"divname":{"type":"string","description":"Name of the division field in the document assembly ticket","example":"readme"},"fields":{"type":"array","description":"Array of field/value pairs to set in the division ticket","items":{"type":"string"},"example":["citi_active","no"]},"library":{"type":"string","description":"Library name to copy a source DA spec from prior to modification (without the `L` prefix)","example":"syslib"},"empty":{"type":"boolean","description":"If `true` deletes all of the body rules (used with `library` or by itself) to clear out all of the division names","example":false}}}}}},"responses":{"200":{"description":"Document assembly values have been set successfully"},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/docs/{path}/styles":{"get":{"tags":["jobs"],"summary":"List Job Styles","description":"Get the list of active styles associated with the job. This will return the list of available style bundle names as specified in the job ticket.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/JobPath"}],"responses":{"200":{"description":"List of job styles","content":{"application/json":{"schema":{"type":"array","description":"List of job styles","example":["standard","master","exception"]}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"409":{"$ref":"#/components/responses/BadJobPath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/styles":{"get":{"tags":["styles"],"summary":"List Style Libraries","description":"Get a list of the style libraries located in the `sd_liz` folder.","security":[{"bearerAuth":[]}],"parameters":[{"in":"query","name":"type","required":false,"description":"Library type to return; `L` = style, `K` = kern, `X` = fast","schema":{"type":"string","enum":["L","K","X"]}}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"},"example":["Lsyslib","Lpost","Xpost"]}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/styles/{path}":{"get":{"tags":["styles"],"summary":"List Style Files","description":"Get a list of the style files or unique bundle names in the `path` parameter","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/StylePath"},{"in":"query","name":"bundle","required":false,"description":"If `true`, return the unique style bundle names instead of the style files","schema":{"type":"boolean"}},{"in":"query","name":"query","required":false,"description":"A simple text pattern string to match on the name","schema":{"type":"string"}}],"responses":{"200":{"description":"List of style files or bundle names in the library","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"},"example":["_fv_noto.sde"]}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"405":{"$ref":"#/components/responses/BadStylePath"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"post":{"tags":["styles"],"summary":"Create Style","description":"Create a style file, if it does not already exist. Unlike other style management functions, the style’s type cannot be empty.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/StylePath"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"style":{"type":"string","description":"The style in the form of `type:name`","example":"pl:environs"}},"required":["style"]}}}},"responses":{"201":{"description":"Style has been created successfully; the `Location` header in the response will have XPP REST’s URL for it"},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"409":{"$ref":"#/components/responses/BadStylePath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/styles/{path}/files/{name}":{"get":{"tags":["styles"],"summary":"Get Style File","description":"Get the file as an attachment from the style/document path","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/StylePath"},{"in":"path","name":"name","required":true,"description":"The file to retrieve from the style/document path","schema":{"type":"string","example":"_fv_noto.sde"}}],"responses":{"200":{"description":"Good response containing the file requested"},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"409":{"$ref":"#/components/responses/BadStylePath"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"post":{"tags":["styles"],"summary":"Put Style File","description":"Put a file into the style/document path. It expects the contents to be encoded as `multipart/form-data`.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/StylePath"},{"in":"path","name":"name","required":true,"description":"The name of the file to put into the style path","schema":{"type":"string","example":"trawz"}}],"requestBody":{"description":"File contents to upload","required":true,"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"filename":{"type":"string","format":"binary"}},"required":["filename"]}}}},"responses":{"200":{"description":"File has been sent successfully"},"401":{"$ref":"#/components/responses/NotAuthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/styles/{path}/{style}":{"get":{"tags":["styles"],"summary":"Export Style ASCII/XML","description":"Get the XPP style in ASCII or XML from the requested style name/path. The requested style type cannot be a CSS, XSL or Perl file.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/StylePath"},{"$ref":"#/components/parameters/StyleTypeName"},{"in":"query","name":"format","required":true,"default":"ascii","description":"File format of the exported style","schema":{"type":"string","enum":["ascii","xml"]}}],"responses":{"200":{"description":"The exported style’s contents","content":{"application/json":{"schema":{"type":"object","properties":{"file":{"type":"string","description":"The exported style as ASCII or XML","example":"FILE { type : pl }\\r\\n\\r\\nFILEHDR {\\r\\nFile_Comment ..."}}}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"409":{"$ref":"#/components/responses/BadStylePath"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"post":{"tags":["styles"],"summary":"Import Style ASCII/XML","description":"Put the ASCII/XML content into a document path/style library","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/StylePath"},{"$ref":"#/components/parameters/StyleTypeName"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"file":{"type":"string","description":"Style content in XML or ASCII format","example":"<?xml version=\"1.0\"?>"}},"required":["file"]}}}},"responses":{"200":{"description":"Style has been saved successfully"},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"409":{"$ref":"#/components/responses/BadStylePath"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"delete":{"tags":["styles"],"summary":"Delete Style","description":"Delete a style file/style bundle. If the style’s type is omitted (as in `:name`) then the style refers to the bundle and its files will be deleted.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/StylePath"},{"$ref":"#/components/parameters/StyleTypeName"}],"responses":{"200":{"description":"The style deletion was successful"},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"409":{"$ref":"#/components/responses/BadStylePath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/styles/{path}/{style}/fields":{"get":{"tags":["styles"],"summary":"Get Style Fields","description":"Get the XPP style fields from a table and/or rule. The requested fields cannot be from a CSS, XSL or Perl file.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/StylePath"},{"$ref":"#/components/parameters/StyleTypeName"},{"in":"query","name":"table","required":false,"description":"A “table” field to match in the form of `number` or `field:value`, e.g. `table=nm:tag` to find `nm` with the value `tag`","schema":{"type":"string"}},{"in":"query","name":"rule","required":false,"description":"A “rule” field to match in the form of `number` or `field:value`, e.g. `rule=1` or `rule=divname:myname` to find a `divname` with the value `myname`","schema":{"type":"string"}}],"responses":{"200":{"description":"The requested style fields in a JSON object","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"409":{"$ref":"#/components/responses/BadStylePath"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"post":{"tags":["styles"],"summary":"Put Style Fields","description":"Put an array of fields into an XPP style file table and/or rule","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/StylePath"},{"$ref":"#/components/parameters/StyleTypeName"},{"in":"query","name":"table","required":false,"description":"A “table” field to match in the form of `number` or `field:value`, e.g. `table=nm:tag` to find `nm` with the value `tag`","schema":{"type":"string"}},{"in":"query","name":"rule","required":false,"description":"A “rule” field to match in the form of `number` or `field:value`, e.g. `rule=1` or `rule=divname:myname` to find a `divname` with the value `myname`","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"type":"array","description":"Array of field/value pairs to set into the style file","items":{"type":"string"},"example":["bgcolor","normal"]}},"required":["fields"]}}}},"responses":{"200":{"description":"Style fields have been successfully set"},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"409":{"$ref":"#/components/responses/BadStylePath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/styles/{path}/{style}/status":{"get":{"tags":["styles"],"summary":"Style Status","description":"Get the status of the style file in the requested path. If the `style` parameter’s type is omitted (i.e `:name`), the style refers to the bundle and will test for the existence of any of the bundle files, including .pl and .css.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/StylePath"},{"$ref":"#/components/parameters/StyleTypeName"}],"responses":{"200":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","properties":{"path":{"type":"string","description":"The API path","example":"syslib"},"osPath":{"type":"string","description":"The filesystem path","example":"C:\\XPP\\sd_liz\\Lsyslib"},"exists":{"type":"boolean","description":"Whether the style or style bundle exists","example":true}}}}}},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"409":{"$ref":"#/components/responses/BadStylePath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/xpp/styles/{path}/{style}/copy":{"post":{"tags":["styles"],"summary":"Copy Styles","description":"Copy a style file or style bundle. If the style’s type is omitted, the style refers to the bundle and it will copy all of the style bundle files.","security":[{"bearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/StylePath"},{"$ref":"#/components/parameters/StyleTypeName"},{"in":"query","name":"sourcePath","required":false,"description":"The source style path (defaults to `path`)","schema":{"type":"string"}},{"in":"query","name":"sourceName","required":false,"description":"The source style bundle name (defaults to `basename`)","schema":{"type":"string"}}],"responses":{"200":{"description":"Style has been copied successfully"},"401":{"$ref":"#/components/responses/NotAuthorized"},"404":{"$ref":"#/components/responses/NotFoundError"},"409":{"$ref":"#/components/responses/BadStylePath"},"500":{"$ref":"#/components/responses/InternalServerError"}}}}},"components":{"parameters":{"DivPath":{"name":"path","in":"path","required":true,"description":"The logical 5-part path to a division in colon-delimited form","schema":{"type":"string","example":"first:xpputils:system:xycharset:readme"}},"JobDivPath":{"name":"path","in":"path","required":true,"description":"The logical path to a job or division in colon-delimited form","schema":{"type":"string","example":"first:xpputils:system:xycharset"}},"MiscPath":{"name":"path","in":"path","required":true,"description":"The logical path to an XPP resource in colon-delimited form","schema":{"type":"string","example":"first:xpputils:system:xycharset:readme"}},"NoWait":{"name":"nowait","in":"query","required":false,"default":false,"description":"If `true`, the API will return immediately with information about the running process. The user can use the `id` to check for command completion by using <a href=\"#operations-document_management-get_xpp_docs_processes__id_\">Command Status</a>","schema":{"type":"boolean"}},"LibName":{"in":"path","name":"lib","required":true,"description":"The image library name","schema":{"type":"string","example":"default"}},"ImageName":{"in":"path","name":"image","required":true,"description":"The image file name","schema":{"type":"string","example":"golfer.eps"}},"JobPath":{"in":"path","name":"path","required":true,"description":"The logical 4-part path to an XPP job in colon-delimited form","schema":{"type":"string","example":"first:xpputils:system:xycharset"}},"StylePath":{"in":"path","name":"path","required":true,"description":"The logical path to an XPP style library name (`Lstd-fmt`) or an XPP document consisting of the handle, class, group, job, and division in the colon-delimited form of `handle:class:group:job:div`. It not possible to set the path to a handle because a single-element name is a style library.","schema":{"type":"string","example":"Lstd-fmt"}},"StyleTypeName":{"in":"path","name":"style","required":true,"description":"The type and name of the style in the colon-delimited form of `type:name`. If the type is absent when describing a style file (as in `:name`), the style refers to the group of style files known as the style bundle. Operations on style will then operate on all of the style bundle files (if, pl, ps, pt, hj, pc, xx, ht, css, and perl).","schema":{"type":"string","example":"pl:fwtest"}}},"responses":{"BadDivPath":{"description":"The `path` parameter is not a division","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"A status code of `InvalidArgument`","example":"InvalidArgument"},"message":{"type":"string","description":"A message saying the path is invalid","example":"path is not a division"}}}}}},"BadJobDivPath":{"description":"The `path` parameter is not valid","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"A status code of `InvalidArgument`","example":"InvalidArgument"},"message":{"type":"string","description":"A message saying the path is invalid","example":"path is not a job or division"}}}}}},"NoWait":{"description":"Good response when `nowait` is `true`","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"Identifier for the running process","example":"5aba11c3-986e-4201-8a1f-7c92650f7c87"},"code":{"type":"string","example":"running"},"message":{"type":"string","example":""},"time":{"type":"string","description":"Timestamp when process began","example":"2024-11-14T03:45:32.038Z"}}}}}},"BadMiscPath":{"description":"The `path` parameter is not valid","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"Error code about the invalid path"},"message":{"type":"string","description":"Message about the invalid path"}}}}}},"PathStatus":{"description":"Metadata about the requested path","content":{"application/json":{"schema":{"type":"object","properties":{"path":{"type":"string","description":"The API path","example":"first:xpputils:system:xycharset:readme"},"osPath":{"type":"string","description":"The OS system path","example":"C:\\RWS\\XPP\\std_jobz\\alljobz\\CLS_xpputils\\GRP_system\\JOB_xycharset\\DIV_readme"},"lastModified":{"type":"string","description":"The date the document folder was last modified","example":"2024-11-19T18:18:00.320Z"},"size":{"type":"string","description":"The size of the directory/file (in bytes)","example":"2132"},"exists":{"type":"boolean","example":true,"description":"`true` if the path exists, `false` otherwise"}}}}}},"CodeMessage":{"description":"Good response","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"Numeric exit code from the command"},"message":{"type":"string","description":"Output text from the command"}}}}}},"NotAuthorized":{"description":"Authorization failed; the `Authorization` header in your request must have a valid JWT obtained from `/xpp/register`","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"Status code will be `unauthorized`","example":"unauthorized"},"message":{"type":"string","description":"A message containing the reason for the authorization failure","example":"Authorization header is missing"}}}}}},"InternalServerError":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"Error code","example":-127},"message":{"type":"string","description":"Error message","example":"An error occurred"}}}}}},"NotFoundError":{"description":"Resource not found","content":{"application/json":{"schema":{"type":"object","properties":{"errno":{"type":"integer","example":-4058},"code":{"type":"string","example":"ENOENT"},"syscall":{"type":"string","example":"lstat"},"path":{"type":"string","example":"C:\\RWS\\XPP\\std_jobz\\alljobz\\CLS_xpputils\\GRP_system\\JOB_xycharset\\DIV_reedme"}}}}}},"BadJobPath":{"description":"The `path` parameter is not a valid job","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"Error code about the invalid path"},"message":{"type":"string","description":"Message about the invalid path"}}}}}},"BadStylePath":{"description":"The `path` parameter is not a style","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"A status code of `InvalidArgument`","example":"InvalidArgument"},"message":{"type":"string","description":"A message about the invalid path"}}}}}}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}},"tags":[{"name":"utilities","description":"This group provides system-level operations such as license checking, REST server status, and a “ping” command for checking the health of the API."},{"name":"divisions","description":"This group is for querying and manipulating divisions only."},{"name":"divisions / jobs","description":"This group is for querying and manipulating divisions or jobs."},{"name":"document management","description":"This group queries and manipulates XPP documents via verb-like actions such as these: list, create, delete, copy, etc."},{"name":"graphics","description":"This group is used to access graphic library/image operations. Images are accessed by library and image name. This is only valid for image libraries defined in the XPP graphics configuration spec having explicit (i.e. not relative) path names."},{"name":"jobs","description":"This group is for querying and manipulating jobs only."},{"name":"styles","description":"This group is for querying and manipulating style files or style bundles."}]};